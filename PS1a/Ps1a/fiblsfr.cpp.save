/*
#include <iostream>
#include <string>
#include "fiblsfr.hpp"
#define BOOST_TEST_DYN_LINK
#include <boost/test/unit_test.hpp>
 
BOOST_AUTO_TEST_CASE(fiveBitsTapAtTwo) {
  FibLFSR l1("1011011000110110");
  
  BOOST_REQUIRE(l1.step() == 0);
  BOOST_REQUIRE(l1.step() == 0);
  BOOST_REQUIRE(l1.step() == 0);
  BOOST_REQUIRE(l1.step() == 1);
  BOOST_REQUIRE(l1.step() == 1);
  BOOST_REQUIRE(l1.step() == 0);
  BOOST_REQUIRE(l1.step() == 0);
  BOOST_REQUIRE(l1.step() == 0);
 

  FibLFSR l2("1011011000110110");
  BOOST_REQUIRE(l2.generate(9) == 49);

}
*/


#include <iostream>
#include <string>
#include "fiblsfr.hpp"
using namespace std;

int main(int argc, char *argv[]){
  FibLSFR test1("0110110001101100"), test2("1100011011000011");
  int testresult;
  
  cout << "Original:  " << test1 << endl; // Shows the original bits before cshifting
  for(int i = 1; i < 10; i++){
    testresult = test1.step();
    cout << i << " steps:   " << test1 << " " << testresult << endl; // Shows the stepped bits then the last bit right after
  }

  test2.generate(5);

  return 0;
}
